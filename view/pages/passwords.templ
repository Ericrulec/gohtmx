package pages;

import (
	"github.com/Ericrulec/gohtmx/view/layout"
	"github.com/Ericrulec/gohtmx/view/components"
)

const pageTitle string = "Passwords in a modern era"

templ PasswordsPage() {
	@layout.Base(pageTitle, false) {
		<section class="text-gray-400">
			<div class="mx-auto flex px-5 py-24 items-center justify-center flex-col">
				@components.Hero("passwords.png")
				<div class="text-center lg:w-2/3 w-full">
					@components.Title(pageTitle)
					<p class="text-gray-300 mt-0">
						November 22, 2023 &CenterDot; 5 min read &CenterDot; by
						<b>Erik Jensson</b>
					</p>
					<br/>
					<br/>
				</div>
				<div class="max-w-2xl">
					@components.Paragraph() {
						This post is about exploring the age-old question; How
						doeth one store thy password? We will dive into why the
						nature of passwords themselves are a problem. How to protect
						yourself against the most common password mistakes, and
						further quality of life improvements.
					}
					@components.Paragraph() {
						Weak passwords are the main reason people get hacked. And sometimes
						it can be difficult to differentiate between good and bad passwords.
						But essentially what makes password good or bad is primarily the
						combination of sufficent length, randomness and complexity. Make it
						sufficiently long and random and its good. Don't be tempted to add a
						family member combined with your date of birth as a password. This
						is common knowledge at this point but I will reiterate either way;
						don't combine anyform of personal information whatsoever with your
						passwords.
					}
					@components.Paragraph() {
						With this newfound information we can start with
						developing new fresh long, completely out of this world
						passwords. But... how the hell are we supposed to remember
						this shit. This part sucks. And it is without a doubt the
						most troublesome part about passwords, and for sure the
						most tiresome. Especially if you have to repeat the same
						process of remembering every scrambled hyroglyph after some
						startup leaked your password again. We only so much space
						in our heads, and memorizing all these passwords will bite
						us in the ass sooner than later. So either we can write
						down some of them on a piece of paper, or digitally on
						a notepad. Even if you encrypt the textfile, this is
						neither safe or conventient. We will explore the sane thing
						to do, namely a password manager.   
					}
					@components.Paragraph() {
						If we search up "Best password manager 2023". 
					}
					<ul
						class="list-item p-5 ml-5 mr-5 text-red-50 border-x-inherit text-justify mb-8 p"
					>
						<li><code>&sc; Bitwarden</code></li>
						<li><code>&sc; NordPass</code></li>
						<li><code>&sc; LastPass</code></li>
						<li><code>&sc; Keeper</code></li>
						<li><code>&sc; 1Password</code></li>
					</ul>
					@components.Paragraph() {
						We get some options to choose from. And depeding on
						whether you want a cloud, self-host or open-source
						solution, these can vary. I do have to mention that
						LastPass has been breached atleast three times, with
						disingenuous security notices. This is always something to
						watch out for when choosing your password manager. Research
						before deciding anything. With that out of the way, we can
						talk about the rest. 
					}
					@components.Paragraph() {
						Personally I use 1Password. Alongside the many quality of
						life improvements a password manager can feature, they also
						feature something called a secret key alongside your master
						password and 2FA. This secret key is a 34 digit sequence of
						random numbers and letters, only accessible to you. The
						secret key is generated on your device and is then used
						alongside the normal login proccedure to gain access to
						your account. Note that 1Password will have no record of
						this secret key, meaning a breach on 1Password will not be
						as detrimental to your passwords. But this also means if
						you lose this secret key, you lose access to your account
						permanently. I found this security feature very interesting, not to
						mention the very conventient SSH support on the CLI they
						offer. 
					}
					@components.Paragraph() {
						I would also like to address the main complaint
						people have with 1Password, or more specifically the
						1Password browser extension. The extension prompts quite frequently for
						the user to type the master-password to unlock the account. By design the account
						is only open for a couple minutes after unlocking. And
						many find this very annoying, and for good reason. But most
						miss the huge security implications of an open
						passwordmanager over long periods of time, on the browser mind you. 
						The desktop version does not have this "problem" and is open longer. But the browser extension
						does not have the same luxury to operate freely and safely in the
						userspace.
					}
					@components.Paragraph() {
						Bitwarden is also very well known as a solid open-source self-host option. 
					}
				</div>
			</div>
		</section>
	}
}
